{
	"sessions" : {                                 // List of sessions that are permenantly available
		"P-window" : {                               // Name of session
			"outputName" : "P-window",               // Name of RTSP stream; usually matches the name of the session
			"tracks" : [                           // List of tracks
				{
					"device" : "video",            // Device name; usually "video" or "audio"
					"scale": 100,                  // Downscale percentage, 1..100, applied AFTER width/height settings
					"fps": 30,                     // Frames per second
					"bitrate": 8000,               // Target bitrate for video (kbps)
					"captureArea": "W",            // Capture area; F = fullscreen, R = rectangle, W = window
					"monitorLocation" : "primary",  // Monitor to capture; specifies a path to the monitor from primary, eg. "left left up"
					"windowName" : "Calculator",  	   // window name
					"windowTracking" : true  
					// Pay attention to use of commas!
					// If there was a comma above, this file would not be valid JSON and would not parse
					// (Check the log for parser errors)
				}
			]
		}
		// Pay attention to use of commas!
		// If there was a comma above, this file would not be valid JSON and would not parse
		// (Check the log for parser errors)
	},
	"dis" : {
		//"multicastAddress" : "224.0.2.1",  // Enables listening to multicast DIS traffic if provided; otherwise listens to broadcast UDP
		//"exerciseId" : 0,  // Limits DIS listening to a specific exercise ID (default 0 = any exercise ID)
		//"port" : 3000  // DIS traffic port (default 3000)
	},
	"zeroconf": {
	    //"bindAddress": "192.168.1.2"  // Selects which NIC to use; not required in the majority of cases
	},
	"advanced" : {
		//"liveTickFreq" : 1500  // CPU allocated to Live555 networking (tick rate in Hz; default 1500)
		//"captureServiceName": "SimvInj.VaderDrv"  // Name of capture service (to use default, do not supply this value; to start no service, supply an empty string)
		//"stopCaptureServiceOnExit": false  // Whether to stop the capture service on shutdown; defaults to true
	}
}
